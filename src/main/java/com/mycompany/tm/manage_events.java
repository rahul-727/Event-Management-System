package com.mycompany.tm;


import com.mycompany.tm.edit_events;
import com.mycompany.tm.Dashboard;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author krrah
 */
public class manage_events extends javax.swing.JFrame {

    /**
     * Creates new form manage_events
     */
    public manage_events() {
        initComponents();
        fetchAndDisplayEvents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Event Name", "Description", "Date", "Time", "Venue", "Ticket Pricing"
            }
        ));
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setHeaderValue("Event Name");
            jTable1.getColumnModel().getColumn(1).setHeaderValue("Description");
            jTable1.getColumnModel().getColumn(2).setHeaderValue("Date");
            jTable1.getColumnModel().getColumn(3).setHeaderValue("Time");
            jTable1.getColumnModel().getColumn(4).setHeaderValue("Venue");
            jTable1.getColumnModel().getColumn(5).setHeaderValue("Ticket Pricing");
        }

        jButton1.setText("Edit");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Delete");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(255, 102, 102));
        jButton3.setText("Exit");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(layout.createSequentialGroup()
                .addGap(152, 152, 152)
                .addComponent(jButton3)
                .addGap(90, 90, 90)
                .addComponent(jButton1)
                .addGap(82, 82, 82)
                .addComponent(jButton2)
                .addContainerGap(557, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addGap(0, 111, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // Get the selected row
    int selectedRow = jTable1.getSelectedRow();

    // Check if a row is selected
    if (selectedRow >= 0) {
        // Get data from the selected row
        String eventName = (String) jTable1.getValueAt(selectedRow, 0);
        String eventDescription = (String) jTable1.getValueAt(selectedRow, 1);
        String eventDate = (String) jTable1.getValueAt(selectedRow, 2);
        String eventTime = (String) jTable1.getValueAt(selectedRow, 3);
        String venue = (String) jTable1.getValueAt(selectedRow, 4);
        String ticketPricing = (String) jTable1.getValueAt(selectedRow, 5);

        // Open the edit_events form and set the data
        edit_events editForm = new edit_events(this);
        editForm.setEventData(eventName, eventDescription, eventDate, eventTime, venue, ticketPricing);
        editForm.setVisible(true);
    } else {
        // No row selected, show an error message or handle it appropriately
        JOptionPane.showMessageDialog(this, "Please select a row to edit.", "Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_jButton1ActionPerformed
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        // Get the selected row
    int selectedRow = jTable1.getSelectedRow();

    // Check if a row is selected
    if (selectedRow >= 0) {
        // Get the event name from the selected row
        String eventName = (String) jTable1.getValueAt(selectedRow, 0);

        // Confirm the deletion with the user
        int option = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete this event?", "Confirm Deletion", JOptionPane.YES_NO_OPTION);
        if (option == JOptionPane.YES_OPTION) {
            // Call the delete method in the manage_events class
            deleteEvent(eventName);

            // Refresh the table after deletion
            fetchAndDisplayEvents();
        }
    } else {
        // No row selected, show an error message or handle it appropriately
        JOptionPane.showMessageDialog(this, "Please select a row to delete.", "Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        Dashboard dashboardForm = new Dashboard();

    // Set the DashboardForm to visible
    dashboardForm.setVisible(true);

    // Dispose of the current events_view form
    dispose();
    }//GEN-LAST:event_jButton3ActionPerformed
    private void deleteEvent(String eventName) {
    // Database connection parameters
    String url = "jdbc:mysql://localhost/travel";
    String username = "root";
    String password = "";

    try (Connection connection = DriverManager.getConnection(url, username, password)) {
        String query = "DELETE FROM events WHERE event_name=?";

        try (PreparedStatement preparedStatement = connection.prepareStatement(query)) {
            preparedStatement.setString(1, eventName);
            preparedStatement.executeUpdate();
        }
    } catch (SQLException ex) {
        ex.printStackTrace();
        // Handle exceptions appropriately, e.g., show an error message
    }
}
    /**
     * @param args the command line arguments
     */
    
    private void fetchAndDisplayEvents() {
        // Database connection parameters
        String url = "jdbc:mysql://localhost/travel";
        String username = "root";
        String password = "";

        try (Connection connection = DriverManager.getConnection(url, username, password)) {
            String query = "SELECT event_name, event_description, event_date, event_time, venue, ticket_pricing FROM events";

            try (PreparedStatement preparedStatement = connection.prepareStatement(query);
                 ResultSet resultSet = preparedStatement.executeQuery()) {

                // Create a DefaultTableModel to store the data for the table
                DefaultTableModel model = new DefaultTableModel();

                // Add column names to the model
                model.addColumn("Event Name");
                model.addColumn("Description");
                model.addColumn("Date");
                model.addColumn("Time");
                model.addColumn("Venue");
                model.addColumn("Ticket Pricing");

                // Iterate through the result set and add rows to the model
                while (resultSet.next()) {
                    Object[] row = new Object[]{
                        resultSet.getString("event_name"),
                        resultSet.getString("event_description"),
                        resultSet.getString("event_date"),
                        resultSet.getString("event_time"),
                        resultSet.getString("venue"),
                        resultSet.getString("ticket_pricing")
                    };
                    model.addRow(row);
                }

                // Set the model for the jTable1
                jTable1.setModel(model);
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
            // Handle exceptions appropriately, e.g., show an error message
        }
    }
    public static void updateDatabase(String eventName, String eventDescription, String eventDate, String eventTime, String venue, String ticketPricing) {
    String url = "jdbc:mysql://localhost/travel";
    String username = "root";
    String password = "";

    try (Connection connection = DriverManager.getConnection(url, username, password)) {
        String query = "UPDATE events SET event_description=?, event_date=?, event_time=?, venue=?, ticket_pricing=? WHERE event_name=?";

        try (PreparedStatement preparedStatement = connection.prepareStatement(query)) {
            preparedStatement.setString(1, eventDescription);
            preparedStatement.setString(2, eventDate);
            preparedStatement.setString(3, eventTime);
            preparedStatement.setString(4, venue);
            preparedStatement.setString(5, ticketPricing);
            preparedStatement.setString(6, eventName);

            preparedStatement.executeUpdate();
        }
    } catch (SQLException ex) {
        ex.printStackTrace();
        // Handle exceptions appropriately, e.g., show an error message
    }
}

    void updateAndRefreshTable() {
    // Call the fetchAndDisplayEvents method to refresh the table
    fetchAndDisplayEvents();
}
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(manage_events.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(manage_events.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(manage_events.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(manage_events.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new manage_events().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
